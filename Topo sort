#include <stdio.h>
#include <stdlib.h>

#define MAX_VERTICES 100

void topologicalSort(int adj[MAX_VERTICES][MAX_VERTICES], int inDegree[], int vertices) {
    int queue[MAX_VERTICES];
    int front = 0, rear = 0;
    
    for (int i = 0; i < vertices; i++) {
        if (inDegree[i] == 0) {
            queue[rear++] = i;
        }
    }

    int count = 0;

    while (front != rear) {
        int vertex = queue[front++];
        printf("%d ", vertex);
        count++;

        for (int i = 0; i < vertices; i++) {
            if (adj[vertex][i] == 1) {
                inDegree[i]--;
                if (inDegree[i] == 0) {
                    queue[rear++] = i;
                }
            }
        }
    }

    if (count != vertices) {
        printf("\nThe graph has a cycle. Topological sort is not possible.\n");
    }
}

int main() {
    int vertices, edges;
    
    printf("Enter the number of vertices: ");
    scanf("%d", &vertices);
    
    printf("Enter the number of edges: ");
    scanf("%d", &edges);

    int adj[MAX_VERTICES][MAX_VERTICES] = {0};
    int inDegree[MAX_VERTICES] = {0};

    printf("Enter the edges (start_vertex end_vertex):\n");
    for (int i = 0; i < edges; i++) {
        int start, end;
        scanf("%d %d", &start, &end);
        adj[start][end] = 1;
        inDegree[end]++;
    }

    printf("Topological Sort of the given graph:\n");
    topologicalSort(adj, inDegree, vertices);

    return 0;
}
