#include <stdio.h>

#define MAX 100

void merge(int arr[], int left, int mid, int right) {
    int i = left;      // Starting index of left subarray
    int j = mid + 1;   // Starting index of right subarray
    int k = 0;
    int temp[MAX];     // Temporary array

    // Merge the two subarrays into temp[]
    while (i <= mid && j <= right) {
        if (arr[i] <= arr[j])
            temp[k++] = arr[i++];
        else
            temp[k++] = arr[j++];
    }

    // Copy remaining elements from left subarray
    while (i <= mid)
        temp[k++] = arr[i++];

    // Copy remaining elements from right subarray
    while (j <= right)
        temp[k++] = arr[j++];

    // Copy sorted temp[] back into original array
    for (i = left, k = 0; i <= right; i++, k++)
        arr[i] = temp[k];
}

void mergeSort(int arr[], int left, int right) {
    if (left < right) {
        int mid = (left + right) / 2;

        // Recursively sort both halves
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);

        // Merge the sorted halves
        merge(arr, left, mid, right);
    }
}

int main() {
    int arr[MAX], n;

    printf("Enter number of elements: ");
    scanf("%d", &n);

    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++)
        scanf("%d", &arr[i]);

    mergeSort(arr, 0, n - 1);

    printf("Sorted array:\n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");

    return 0;
}
